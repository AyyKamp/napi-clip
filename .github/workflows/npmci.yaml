name: NPM CI

on: [push]

jobs:
  test-for-new-version:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Check Version
      run: |
        new_version=$(git show $(git log --pretty=format:'%H' -2 | sed '1q;d'):./package.json | grep "\"version\"")
        old_version=$(git show $(git log --pretty=format:'%H' -2 | sed '2q;d'):./package.json | grep "\"version\"")
        version_changed=$(if [ "$new_version" != "$old_version" ]; then echo "true"; else echo "false"; fi)
        echo $version_changed > changed.txt
    - name: Pass $changed to other jobs
      uses: actions/upload-artifact@v1
      with:
        name: version_changed
        path: changed.txt
    
  build:
    needs: test-for-new-version

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive

    - uses: actions/download-artifact@v1
      with:
        name: version_changed

    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Build
      run: npm install --build-from-source

    - name: Test
      run: | 
        if [ "$RUNNER_OS" == "Linux" ]; 
          then xvfb-run ./node_modules/.bin/jest; 
          else ./node_modules/.bin/jest;
        fi
    - name: Upload binaries to GitHub Releases
      run: |
        version_changed=$(cat version_changed/changed.txt)
         if [ "$version_changed" == "true" ]; 
          then npm run prebuild --upload--all ${{ secrets.NAPI_CLIP_GITHUB_TOKEN }}; 
        fi

  publish:
    needs: build

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: recursive

      - uses: actions/download-artifact@v1
        with:
          name: version_changed

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Publish to NPM if version changed
        run: |
          version_changed=$(cat version_changed/changed.txt)
          if [ "$version_changed" == "true" ]; 
            then npm publish; 
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NAPI_CLIP_NPM_TOKEN }}
      
